/**
  css class and variable definitions for neumorphism style elements
  @example
  <div className={neuelement md flat}></div>
 */

.neuelement {
  $offset-default: 5px;
  $offset-sm: 10px;
  $offset-md: 20px;
  $offset-lg: 30px;
  $radius-default: 10px;
  $radius-sm: 20px;
  $radius-md: 40px;
  $radius-lg: 60px;

  $offset: var(--card-offset);
  $radius: var(--card-radius);

  --card-offset: #{$offset-default};
  --card-radius: #{$radius-default};

  &.sm {
    --card-offset: #{$offset-sm};
    --card-radius: #{$radius-sm};
  }

  &.md {
    --card-offset: #{$offset-md};
    --card-radius: #{$radius-md};
  }

  &.lg {
    --card-offset: #{$offset-lg};
    --card-radius: #{$radius-lg};
  }

  &.flat {
    background: #e0e0e0;
    box-shadow: #{$offset} #{$offset} #{$radius} #bebebe,
    calc(#{$offset} * -1) calc(#{$offset} * -1) #{$radius} #ffffff;
  }

  &.convex {
    background: linear-gradient(145deg, #f0f0f0, #cacaca);
    box-shadow:  $offset $offset $radius #bebebe,
    calc(#{$offset} * -1) calc(#{$offset} * -1) $radius #ffffff;
  }

  &.concave {
    background: linear-gradient(145deg, #cacaca, #f0f0f0);
    box-shadow:  $offset $offset $radius #bebebe,
    calc(#{$offset} * -1) calc(#{$offset} * -1) $radius #ffffff;
  }

  &.pressed {
    background: #e0e0e0;
    box-shadow: inset $offset $offset $radius #bebebe,
    inset calc(#{$offset} * -1) calc(#{$offset} * -1) $radius #ffffff;
  }

  &.hoverable {
    transition: 0.4s cubic-bezier(0, 0.57, 0.49, 1.51);

    &:hover {
      background: #e0e0e0;
      box-shadow: inset $offset $offset $radius #bebebe,
      inset calc(#{$offset} * -1) calc(#{$offset} * -1) $radius #ffffff;
      transform: scale(0.95);
    }
  }
}